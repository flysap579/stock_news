name: Send Taiwan Stock Data to LINE Notify

on:
  schedule:
    - cron: '0 10 * * *' # 每天 UTC 10:00 觸發，可以根據需要調整時間
  workflow_dispatch: # 手動觸發

jobs:
  send_stock_data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # 使用 Python 3.x 版本

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas schedule

    - name: Run script
      env:
        LINE_NOTIFY_TOKEN: ${{ secrets.LINE_NOTIFY_TOKEN }}
      run: |
        python - <<EOF
import requests

def fetch_taiwan_stock_data():
    url = 'https://www.twse.com.tw/fund/BFI82U?response=json&dayDate=&weekDate=&monthDate=&type=day'
    response = requests.get(url)

    if response.status_code == 200:
        data = response.json()
        if data['stat'] == 'OK':
            table_header = data['title']
            table_date = data['date']
            fields = data['fields']
            content = data['data']
            
            message = f"{table_header} - {table_date}\n\n"
            message += "\t".join(fields) + "\n"
            for row in content:
                message += "\t".join(row) + "\n"
            return message
        else:
            return "Failed to retrieve data. Status: Not OK"
    else:
        return f"Failed to retrieve data. Status code: {response.status_code}"

def send_line_notify(message, token):
    url = 'https://notify-api.line.me/api/notify'
    headers = {
        'Authorization': f'Bearer {token}'
    }
    data = {
        'message': message
    }
    response = requests.post(url, headers=headers, data=data)
    if response.status_code == 200:
        print('Notification sent successfully!')
    else:
        print(f'Failed to send notification. Status code: {response.status_code}')

token = '${{ secrets.LINE_NOTIFY_TOKEN }}'
stock_data = fetch_taiwan_stock_data()
message = f"今日台灣股市三大法人買賣金額統計表：\n\n{stock_data}"
send_line_notify(message, token)
EOF
